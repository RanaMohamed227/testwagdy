/*********************************************
**********************************************
* Jenkinsfile for CI Multibranch Pipeline
* Project: CI_Brightskies
* Brightskies Â©
**********************************************
**********************************************/

pipeline {
    agent any

    stages {
        stage('Identify Git Event') {
            steps {
                script {
                    if (env.ghprbPullId) { // Use ghprbPullId for PR number
                        echo "This is a pull request from branch: ${env.ghprbSourceBranch}"
                        currentBuild.displayName = "PR-${env.ghprbSourceBranch}-${env.ghprbPullId} - Build #${env.BUILD_NUMBER}"  
                    } else {
                        echo "Push Event detected for Build #${env.BUILD_NUMBER}"
                        currentBuild.displayName = "Push - Build #${env.BUILD_NUMBER}"
                    }
                }
            }
        }
        
        stage('Push Pipeline') {
            when {
                not { expression { env.ghprbPullId } } // Run only for push events
            }
            parallel {
                stage('SWE 4') {
                    stages {
                        /******************************************************* Build Stage ***********************************************************/
                        stage('Build') {
                            steps {
                                script {
                                    if (env.BRANCH_NAME == 'Feature1') {
                                        /*Developer1*/

                                    } else if (env.BRANCH_NAME == 'Feature2') {
                                        /*Developer2*/

                                    } else if (env.BRANCH_NAME == 'Feature3') {
                                        /*Developer3*/

                                    } else if (env.BRANCH_NAME == 'main') {
                                        echo "============================================================================================="
                                        echo "Building source code..."
                                        echo "From building the Gtest project"
                                        echo "============================================================================================="
                                    } else {
                                        /*Nothing*/
                                    }
                                }
                            }
                        }
                        
                        /************************************************ Static Code Analysis Stage *************************************************/
                        stage('Static Code Analysis') {
                            steps {
                                echo "Running Static Code Analysis..."
                                script {
                                    if (env.BRANCH_NAME == 'Feature1') {
                                        /*Developer1*/  
                                    } else if (env.BRANCH_NAME == 'Feature2') {
                                        /*Developer2*/  
                                    } else if (env.BRANCH_NAME == 'Feature3') {
                                        /*Developer3*/  
                                    } else if (env.BRANCH_NAME == 'main') {
                                        echo "Running Static Code Analysis..."
                                    } else {
                                        /*Nothing*/
                                    }
                                }
                                echo "============================================================================================="
                            }
                        }
                        
                        /********************************************** Code Coverage Analysis Stage ****************************************************/
                        stage('Code Coverage Analysis') {
                            steps {
                                echo "============================================================================================="
                                echo "Generating code coverage report..."
                                echo "============================================================================================="
                            }
                        }
                        
                        /*************************************************** Unit Testing Stage *******************************************************/
                        stage('Unit Testing') {
                            steps {
                                echo "============================================================================================="
                                echo "Running unit tests with Google Test..."
                                echo "============================================================================================="
                            }
                        }
                        
                        /******************************************************************************************************************************/
                        stage('Allure Report SUT') {
                            steps {
                                echo "============================================================================================="
                                echo "Generating Allure Report..."
                                echo "============================================================================================="
                            }
                        }
                    }
                }
            }
        }
        
        stage('Pull Request Pipeline') {
            when {
                allOf {
                    expression { env.ghprbPullId } // Run only for pull request events
                    anyOf {
                        branch 'Dev'
                        branch 'Feature'
                        branch 'main'
                    }
                }
            }
            parallel {
                stage('SWE 5 - PR') {
                    stages {
                        stage('Checkout PR') {
                            steps {
                                echo 'Checking out the PR branch...'
                                // Add your checkout or PR-specific steps here
                            }
                        }
                        stage('Integration Tests') {
                            steps {
                                echo 'Running Code Inspection tests...'
                                // Add your test steps here
                            }
                        }
                    }
                }
            }
        }
        
        stage('Release Notes') {
            when {
                anyOf {
                    branch 'Dev'
                    branch 'main'
                }
            }
            stages {
                stage('Release Notes') {
                    steps {
                        echo 'Releasing Jira notes...'
                        // Add your checkout or release-specific steps here
                    }
                }
            }
        }
    }
}
